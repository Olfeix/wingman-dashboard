{"ast":null,"code":"var _jsxFileName = \"/home/olfeix/projects/wingman/src/components/FormComponent/LoginForm/LoginForm.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"./FormFields\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  email: Yup.string().required(\"Required\"),\n  password: Yup.string().required(\"Required\")\n});\nconst AddUserForm = _ref => {\n  let {\n    email = \"\",\n    password = \"\",\n    onSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email,\n        password\n      },\n      enableReinitialize: true,\n      validationSchema: validationSchema,\n      onSubmit: (values, _ref2) => {\n        let {\n          setSubmitting\n        } = _ref2;\n        onSubmit(values, setSubmitting);\n      },\n      children: /*#__PURE__*/_jsxDEV(FormFields, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = AddUserForm;\nexport default AddUserForm;\nvar _c;\n$RefreshReg$(_c, \"AddUserForm\");","map":{"version":3,"names":["React","Formik","Yup","FormFields","jsxDEV","_jsxDEV","Fragment","_Fragment","validationSchema","object","email","string","required","password","AddUserForm","_ref","onSubmit","children","initialValues","enableReinitialize","values","_ref2","setSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/olfeix/projects/wingman/src/components/FormComponent/LoginForm/LoginForm.js"],"sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"./FormFields\";\n\nconst validationSchema = Yup.object({\n  email: Yup.string().required(\"Required\"),\n  password: Yup.string().required(\"Required\"),\n});\n\nconst AddUserForm = ({ email = \"\", password = \"\", onSubmit }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email,\n          password,\n        }}\n        enableReinitialize\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          onSubmit(values, setSubmitting);\n        }}\n      >\n        <FormFields />\n      </Formik>\n    </>\n  );\n};\n\nexport default AddUserForm;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,gBAAgB,GAAGN,GAAG,CAACO,MAAM,CAAC;EAClCC,KAAK,EAAER,GAAG,CAACS,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EACxCC,QAAQ,EAAEX,GAAG,CAACS,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU;AAC5C,CAAC,CAAC;AAEF,MAAME,WAAW,GAAGC,IAAA,IAA6C;EAAA,IAA5C;IAAEL,KAAK,GAAG,EAAE;IAAEG,QAAQ,GAAG,EAAE;IAAEG;EAAS,CAAC,GAAAD,IAAA;EAC1D,oBACEV,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACEZ,OAAA,CAACJ,MAAM;MACLiB,aAAa,EAAE;QACbR,KAAK;QACLG;MACF,CAAE;MACFM,kBAAkB;MAClBX,gBAAgB,EAAEA,gBAAiB;MACnCQ,QAAQ,EAAEA,CAACI,MAAM,EAAAC,KAAA,KAAwB;QAAA,IAAtB;UAAEC;QAAc,CAAC,GAAAD,KAAA;QAClCL,QAAQ,CAACI,MAAM,EAAEE,aAAa,CAAC;MACjC,CAAE;MAAAL,QAAA,eAEFZ,OAAA,CAACF,UAAU;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACP,iBACR;AAEP,CAAC;AAACC,EAAA,GAlBIb,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}